<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<http pattern="/pages/login/login.xhtml" security="none" />
	<http pattern="/kaptcha.jpg" security="none" />
	<http pattern="/download.xhtml" security="none" />
	<http pattern="/service/**" security="none" />
	<http pattern="/wsServlet/**" security="none" />
	<http pattern="/css/**" security="none" />
	<http pattern="/ext/**" security="none" />
	<http pattern="/images/**" security="none" />
	<http pattern="/js/**" security="none" />
	<http pattern="/a4j/**" security="none" />
	<http pattern="/org.richfaces.resources/**" security="none" />
	<http pattern="/javax.faces.resource/**" security="none" />
	<http pattern="/rfRes/**" security="none" />
	<http pattern="/pages/app/**" security="none" />

	<http use-expressions='true' entry-point-ref="loginUrlAuthenticationEntryPoint"
		access-denied-page="/errorNoAuth.jsp">
		<!-- 会话管理 -->
		<session-management invalid-session-url="/pages/login/login.xhtml">
			<concurrency-control max-sessions="30"
				error-if-maximum-exceeded="true" />
		</session-management>
		<!-- 登出管理 -->
		<logout invalidate-session="true" logout-success-url="/pages/login/login.xhtml"
			logout-url="/j_spring_security_logout" />
		<!-- 认证和授权 -->
		<custom-filter ref="customAuthenticationFilter"
			position="FORM_LOGIN_FILTER" />
		<custom-filter ref="customAuthorizationFilter" before="FILTER_SECURITY_INTERCEPTOR" />
	</http>

	<!-- 未登录的切入点 -->
	<beans:bean id="loginUrlAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/pages/login/login.xhtml" />
	</beans:bean>

	<!-- 登录验证器：用户有没有登录的资格 -->
	<beans:bean id="customAuthenticationFilter"
		class="itaf.framework.security.CustomAuthenticationFilter">
		<beans:property name="authenticationManager" ref="customAuthenticationManager" />
		<beans:property name="filterProcessesUrl" value="/j_spring_security_check" />
		<beans:property name="authenticationSuccessHandler">
			<beans:bean
				class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
				<beans:property name="alwaysUseDefaultTargetUrl"
					value="true" />
				<beans:property name="defaultTargetUrl" value="/pages/index.xhtml" />
			</beans:bean>
		</beans:property>
		<beans:property name="authenticationFailureHandler">
			<beans:bean
				class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
				<beans:property name="defaultFailureUrl" value="/pages/login/login.xhtml" />
			</beans:bean>
		</beans:property>
	</beans:bean>

	<!-- 认证过滤器：判断用户有没有访问特定资源的权限 -->
	<beans:bean id="customAuthorizationFilter"
		class="itaf.framework.security.CustomAuthorizationFilter">
		<!-- 用户拥有的权限 -->
		<beans:property name="authenticationManager" ref="customAuthenticationManager" />
		<!-- 用户是否拥有所请求资源的权限 -->
		<beans:property name="accessDecisionManager">
			<beans:bean class="itaf.framework.security.CustomAccessDecisionManager" />
		</beans:property>
		<!-- 资源与权限对应关系 -->
		<beans:property name="securityMetadataSource">
			<beans:bean class="itaf.framework.security.CustomSecurityMetadataSource" />
		</beans:property>
	</beans:bean>

	<!-- 用户拥有的权限：登录后取得用户所保有的权限信息 -->
	<authentication-manager alias="customAuthenticationManager">
		<authentication-provider user-service-ref="customUserDetailService">
			<password-encoder ref="shaPasswordEncoder" />
		</authentication-provider>
	</authentication-manager>
	<beans:bean id="customUserDetailService"
		class="itaf.framework.security.CustomUserDetailServiceImpl" />

	<beans:bean id="shaPasswordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />

</beans:beans> 